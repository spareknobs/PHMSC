
####################################################################################################
# CMakeLists file for PHMSC plugins
# Generated by rm
# 2024-11-03
####################################################################################################

####################################################################################################
# basic project config
cmake_minimum_required(VERSION 3.12)
set(project_name "PHMResonCollision")
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake_modules ${CMAKE_MODULE_PATH})
set(CMAKE_CXX_STANDARD 17)

####################################################################################################
# load modules
include(SuperColliderServerPlugin RESULT_VARIABLE server_plugin_found)
if(NOT server_plugin_found)
    message(FATAL_ERROR "Could not find server plugin functions module")
endif()

include(SuperColliderCompilerConfig RESULT_VARIABLE compiler_config_found)
if(NOT compiler_config_found)
    message(FATAL_ERROR "Could not find compiler config module")
endif()

# Windows - puts redistributable DLLs in install directory
include(InstallRequiredSystemLibraries)

sc_check_sc_path("${SC_PATH}")
message(STATUS "Found SuperCollider: ${SC_PATH}")
set(SC_PATH "${SC_PATH}" CACHE PATH
    "Path to SuperCollider source. Relative paths are treated as relative to this script" FORCE)

include("${SC_PATH}/SCVersion.txt")
message(STATUS "Building plugins for SuperCollider version: ${SC_VERSION}")

# set project here to avoid SCVersion.txt clobbering our version info
project(${project_name})
sc_do_initial_compiler_config() # do after setting project so compiler ID is available

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT OR NOT CMAKE_INSTALL_PREFIX)
    message(WARNING "No install prefix provided, defaulting to $BUILD_DIR/install")
    set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Install prefix" FORCE)
endif()

message(STATUS "Install directory set to: ${CMAKE_INSTALL_PREFIX}")

####################################################################################################
# options
option(SUPERNOVA "Build plugins for supernova" ON)
option(SCSYNTH "Build plugins for scsynth" ON)
option(NATIVE "Optimize for native architecture" OFF)
option(STRICT "Use strict warning flags" OFF)
option(NOVA_SIMD "Build plugins with nova-simd support." ON)

####################################################################################################
# include libraries

if (NOVA_SIMD)
	add_definitions(-DNOVA_SIMD)
	include_directories(${SC_PATH}/external_libraries/nova-simd)
endif()

####################################################################################################
# Begin target PHMString

set(PHMString_cpp_files
    plugins/PHMString/PHMString.hpp
    plugins/PHMString/PHMString.cpp
)
set(PHMString_sc_files
    plugins/PHMString/PHMString.sc
)
set(PHMString_schelp_files
    plugins/PHMString/PHMString.schelp
)

sc_add_server_plugin(
    "PHMString/PHMString" # desination directory
    "PHMString" # target name
    "${PHMString_cpp_files}"
    "${PHMString_sc_files}"
    "${PHMString_schelp_files}"
)

# End target PHMString
####################################################################################################


####################################################################################################
# Begin target PHMStringCollision

set(PHMStringCollision_cpp_files
    plugins/PHMStringCollision/PHMStringCollision.hpp
    plugins/PHMStringCollision/PHMStringCollision.cpp
)
set(PHMStringCollision_sc_files
    plugins/PHMStringCollision/PHMStringCollision.sc
)
set(PHMStringCollision_schelp_files
    plugins/PHMStringCollision/PHMStringCollision.schelp
)

sc_add_server_plugin(
    "PHMStringCollision/PHMStringCollision" # desination directory
    "PHMStringCollision" # target name
    "${PHMStringCollision_cpp_files}"
    "${PHMStringCollision_sc_files}"
    "${PHMStringCollision_schelp_files}"
)

# End target PHMStringCollision
####################################################################################################

####################################################################################################
# Begin target PHMCoupledStrings

set(PHMStringCollision_cpp_files
    plugins/PHMCoupledStrings/PHMCoupledStrings.hpp
    plugins/PHMCoupledStrings/PHMCoupledStrings.cpp
)
set(PHMStringCollision_sc_files
    plugins/PHMCoupledStrings/PHMCoupledStrings.sc
)
set(PHMStringCollision_schelp_files
    plugins/PHMCoupledStrings/PHMCoupledStrings.schelp
)

sc_add_server_plugin(
    "PHMCoupledStrings/PHMCoupledStrings" # desination directory
    "PHMCoupledStrings" # target name
    "${PHMStringCollision_cpp_files}"
    "${PHMStringCollision_sc_files}"
    "${PHMStringCollision_schelp_files}"
)

# End target PHMCoupledStrings
####################################################################################################

####################################################################################################
# Begin target PHMResonCollision

set(PHMResonCollision_cpp_files
    plugins/PHMResonCollision/PHMResonCollision.hpp
    plugins/PHMResonCollision/PHMResonCollision.cpp
)
set(PHMResonCollision_sc_files
    plugins/PHMResonCollision/PHMResonCollision.sc
)
set(PHMResonCollision_schelp_files
    plugins/PHMResonCollision/PHMResonCollision.schelp
)

sc_add_server_plugin(
    "PHMResonCollision/PHMResonCollision" # desination directory
    "PHMResonCollision" # target name
    "${PHMResonCollision_cpp_files}"
    "${PHMResonCollision_sc_files}"
    "${PHMResonCollision_schelp_files}"
)

# End target PHMResonCollision
####################################################################################################

####################################################################################################
# Begin target PHMFlue1

set(PHMFlue1_cpp_files
    plugins/PHMFlue1/PHMFlue1.hpp
    plugins/PHMFlue1/PHMFlue1.cpp
)
set(PHMFlue1_sc_files
    plugins/PHMFlue1/PHMFlue1.sc
)
set(PHMFlue1_schelp_files
    plugins/PHMFlue1/PHMFlue1.schelp
)

sc_add_server_plugin(
    "PHMFlue1/PHMFlue1" # desination directory
    "PHMFlue1" # target name
    "${PHMFlue1_cpp_files}"
    "${PHMFlue1_sc_files}"
    "${PHMFlue1_schelp_files}"
)

# End target PHMFlue1
####################################################################################################
# Begin target PHMStringFriction

set(PHMStringFriction_cpp_files
    plugins/PHMStringFriction/PHMStringFriction.hpp
    plugins/PHMStringFriction/PHMStringFriction.cpp
)
set(PHMStringFriction_sc_files
    plugins/PHMStringFriction/PHMStringFriction.sc
)
set(PHMStringFriction_schelp_files
    plugins/PHMStringFriction/PHMStringFriction.schelp
)

sc_add_server_plugin(
    "PHMStringFriction/PHMStringFriction" # desination directory
    "PHMStringFriction" # target name
    "${PHMStringFriction_cpp_files}"
    "${PHMStringFriction_sc_files}"
    "${PHMStringFriction_schelp_files}"
)

# End target PHMStringFriction

####################################################################################################
# Begin target PHMResonFriction

set(PHMResonFriction_cpp_files
    plugins/PHMResonFriction/PHMResonFriction.hpp
    plugins/PHMResonFriction/PHMResonFriction.cpp
)
set(PHMResonFriction_sc_files
    plugins/PHMResonFriction/PHMResonFriction.sc
)
set(PHMResonFriction_schelp_files
    plugins/PHMResonFriction/PHMResonFriction.schelp
)

sc_add_server_plugin(
    "PHMResonFriction/PHMResonFriction" # desination directory
    "PHMResonFriction" # target name
    "${PHMResonFriction_cpp_files}"
    "${PHMResonFriction_sc_files}"
    "${PHMResonFriction_schelp_files}"
)

# End target PHMResonFriction
####################################################################################################
# Begin target PHMResonCustom

set(PHMResonCustom_cpp_files
    plugins/PHMResonCustom/PHMResonCustom.hpp
    plugins/PHMResonCustom/PHMResonCustom.cpp
)
set(PHMResonCustom_sc_files
    plugins/PHMResonCustom/PHMResonCustom.sc
)
set(PHMResonCustom_schelp_files
    plugins/PHMResonCustom/PHMResonCustom.schelp
)

sc_add_server_plugin(
    "PHMResonCustom/PHMResonCustom" # desination directory
    "PHMResonCustom" # target name
    "${PHMResonCustom_cpp_files}"
    "${PHMResonCustom_sc_files}"
    "${PHMResonCustom_schelp_files}"
)

# End target PHMResonCustom
####################################################################################################


# END PLUGIN TARGET DEFINITION
####################################################################################################

message(STATUS "Generating plugin targets done")
